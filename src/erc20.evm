// ERC-20 implementation




# constructor

// rely deployer address
60 01
33
55


// construct DOMAIN_SEPARATOR

// keccak256("EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)")
7f 45 49 50 37 31 32 44 6f 6d 61 69 6e 28 73 74 72 69 6e 67 20 6e 61 6d 65 2c 73 74 72 69 6e 67 20
60 00
52
7f 76 65 72 73 69 6f 6e 2c 75 69 6e 74 32 35 36 20 63 68 61 69 6e 49 64 2c 61 64 64 72 65 73 73 20
60 20
52
7f 76 65 72 69 66 79 69 6e 67 43 6f 6e 74 72 61 63 74 29 00 00 00 00 00 00 00 00 00 00 00 00 00 00
60 40
52
60 52
60 00
20
60 00
52

// keccak("Dai Stablecoin")
7f 44 61 69 20 53 74 61 62 6c 65 63 6f 69 6e 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
60 20
52
60 0e
60 20
20
60 20
52

// keccak("1")
7f 31 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
60 40
52
60 01
60 40
20
60 40
52

// chainId constructor param
60 20
61 : end
60 60
39

// contract's address
30
60 80
52

// hash and store
60 a0
60 00
20
60 02
55


// return runtime code
61 : end - start
80
61 : start
60 00
39
60 00
f3




# start

// function selector
60 00
35
60 e0
1c
80
63 06 fd de 03
14
61 -> name()
57
80
63 95 d8 9b 41
14
61 -> symbol()
57
80
63 31 3c e5 67
14
61 -> decimals()
57
80
63 70 a0 82 31
14
61 -> balanceOf(address)
57
80
63 40 c1 0f 19
14
61 -> mint(address,uint256)
57
80
63 a9 05 9c bb
14
61 -> transfer(address,uint256)
57
80
63 18 16 0d dd
14
61 -> totalSupply()
57
80
63 09 5e a7 b3
14
61 -> approve(address,uint256)
57
80
63 dd 62 ed 3e
14
61 -> allowance(address,address)
57
80
63 23 b8 72 dd
14
61 -> transferFrom(address,address,uint256)
57
80
63 65 fa e3 5e
14
61 -> rely(address)
57
80
63 bf 35 3d bb
14
61 -> wards(address)
57
63 36 44 e5 15
14
61 -> DOMAIN_SEPARATOR()
57
61 -> revert
56


# name()
5b
60 20
60 00
52
60 0e
60 20
52
6d 44 61 69 20 53 74 61 62 6c 65 63 6f 69 6e
60 90
1b
60 40
52
60 60
60 00
f3


# symbol()
5b
60 20
60 00
52
60 03
60 20
52
62 44 41 49
60 e8
1b
60 40
52
60 60
60 00
f3


# decimals()
5b
60 12
60 00
52
60 20
60 00
f3


# balanceOf(address)
5b
60 04
35
60 00
52
60 40
60 00
20
54
60 00
52
60 20
60 00
f3


# mint(address,uint256)
5b
61 -> authed_mint
61 -> auth[jump]
56
# authed_mint
5b
60 24
35
60 01
54
81         // [amount,total,amount]
61 -> mint_post_add
61 -> add[jump,x,y]
56
# mint_post_add
5b
60 01
55
60 04
35
60 00
61 -> increase[from,to,amount]
56


# transfer(address,uint256)
5b
60 24
35
60 04
35
33
61 -> transfer[from,to,amount]
56


# transferFrom(address,address,uint256)
5b
60 24
35
60 00
52
60 04
35
60 20
52
60 40
60 00
20
80         // [kk,kk]
54
80         // [allowance,allowance,kk]
60 44
35
80         // [amount,amount,allowance,allowance,kk]
91         // [allowance,amount,amount,allowance,kk]
10
61 -> revert
57
90         // [allowance,amount,kk]
03
90         // [kk,new]
55
60 44
35
60 24
35
60 04
35
61 -> transfer[from,to,amount]
56


# transfer[from,to,amount]
5b
82        // [amount,from,to,amount]
81        // [from,amount,from,to,amount]
60 00
52
60 00
60 20
52
60 40
60 00
20
80        // [kk,kk,amount,from,to,amount]
91        // [amount,kk,kk,from,to,amount]
90        // [kk,amount,kk,from,to,amount]
54
80        // [current,current,amount,kk,from,to,amount]
82        // [amount,current,current,amount,kk,from,to,amount]
11
61 -> revert
57        // [current,amount,kk,from,to,amount]
03
90        // [kk,new,from,to,amount]
55
61 -> increase[from,to,amount]
56


# increase[from,to,amount]
5b
81        // [to,from,to,amount]
60 00
52
60 00
60 20
52
60 40
60 00
20
80       // [kk,kk,from,to,amount]
54
84       // [amount,current,kk,from,to,amount]
01
90       // [kk,new,from,to,amount]
55
61 -> emit_transfer[from,to,amount]
56


# emit_transfer[from,to,amount]
5b
91             // [amount,to,from]
60 00
52
90             // [from,to]
7f dd f2 52 ad 1b e2 c8 9b 69 c2 b0 68 fc 37 8d aa 95 2b a7 f1 63 c4 a1 16 28 f5 5a 4d f5 23 b3 ef
60 20
60 00
a3
00


# totalSupply()
5b
60 01
54
60 00
52
60 20
60 00
f3


# approve(address,uint256)
5b
60 24
35
60 04
35
60 00
52
33
60 20
52
60 40
60 00
20
55
// emit event
60 24
35
60 00
52
60 04
35
33
7f 8c 5b e1 e5 eb ec 7d 5b d1 4f 71 42 7d 1e 84 f3 dd 03 14 c0 f7 b2 29 1e 5b 20 0a c8 c7 c3 b9 25
60 20
60 00
a3
00


# allowance(address,address)
5b
60 24
35
60 00
52
60 04
35
60 20
52
60 40
60 00
20
54
60 00
52
60 20
60 00
f3


# rely(address)
5b
61 -> authed_rely
61 -> auth[jump]
56
# authed_rely
5b
60 01
60 04
35
55
00


# wards(address)
5b
60 04
35
54
60 00
52
60 20
60 00
f3


# auth[jump]
5b
33
54
15
61 -> revert
57
56


# DOMAIN_SEPARATOR()
5b
60 02
54
60 00
52
60 20
60 00
f3


# add[jump,x,y]
5b
91   // [y,x,jump]
80   // [y,y,x,jump]
91   // [x,y,y,jump]
01
80   // [sum,sum,y,jump]
91   // [y,sum,sum,jump]
11
61 -> revert
57
90   // [jump,sum]
56


# revert
5b
60 00
80
fd

# end




// chainId constructor param
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01
